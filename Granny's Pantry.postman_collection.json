{
	"info": {
		"_postman_id": "ef620a05-2bb4-42b3-b2f4-ac02b408bb52",
		"name": "Granny's Pantry",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23015006"
	},
	"item": [
		{
			"name": "Restore basket",
			"item": [
				{
					"name": "Get details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Check if request status is OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Check if Pantry API path variable is used in the URL\r",
									"pm.test(\"Pantry API path variable used\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_api_path\"));\r",
									"});\r",
									"\r",
									"//Check if Pantry ID variable is used in the URL\r",
									"pm.test(\"Pantry id variable used\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_id\"));\r",
									"});\r",
									"\r",
									"//Check if Basket name variable is used in the URL\r",
									"//The .search() method returns -1 by default if no match found for \"basket\" in the URL (e.g. for getting account details)\r",
									" if(String(pm.request.url).search(\"basket\") != -1){\r",
									"pm.test(\"Basket name variable used when needed\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"basket_name\"));\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://getpantry.cloud/apiv1/pantry/d5f936ab-4fbc-4cf2-9297-e0a9efded1f9",
							"protocol": "https",
							"host": [
								"getpantry",
								"cloud"
							],
							"path": [
								"apiv1",
								"pantry",
								"d5f936ab-4fbc-4cf2-9297-e0a9efded1f9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Check if request status is OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Check if Pantry API path variable is used in the URL\r",
									"pm.test(\"Pantry API path variable used\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_api_path\"));\r",
									"});\r",
									"\r",
									"//Check if Pantry ID variable is used in the URL\r",
									"pm.test(\"Pantry id variable used\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_id\"));\r",
									"});\r",
									"\r",
									"//Check if Basket name variable is used in the URL\r",
									"//The .search() method returns -1 by default if no match found for \"basket\" in the URL (e.g. for getting account details)\r",
									" if(String(pm.request.url).search(\"basket\") != -1){\r",
									"pm.test(\"Basket name variable used when needed\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"basket_name\"));\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://getpantry.cloud/apiv1/pantry/d5f936ab-4fbc-4cf2-9297-e0a9efded1f9/basket/kosar",
							"protocol": "https",
							"host": [
								"getpantry",
								"cloud"
							],
							"path": [
								"apiv1",
								"pantry",
								"d5f936ab-4fbc-4cf2-9297-e0a9efded1f9",
								"basket",
								"kosar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fill basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Check if request status is OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Check if Pantry API path variable is used in the URL\r",
									"pm.test(\"Pantry API path variable used\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_api_path\"));\r",
									"});\r",
									"\r",
									"//Check if Pantry ID variable is used in the URL\r",
									"pm.test(\"Pantry id variable used\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_id\"));\r",
									"});\r",
									"\r",
									"//Check if Basket name variable is used in the URL\r",
									"//The .search() method returns -1 by default if no match found for \"basket\" in the URL (e.g. for getting account details)\r",
									" if(String(pm.request.url).search(\"basket\") != -1){\r",
									"pm.test(\"Basket name variable used when needed\", function () {\r",
									"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"basket_name\"));\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fruits\": [\r\n        \"apple\",\r\n        \"banana\",\r\n        \"peach\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://getpantry.cloud/apiv1/pantry/{{pantry_id}}/basket/{{basket_name}}",
							"protocol": "https",
							"host": [
								"getpantry",
								"cloud"
							],
							"path": [
								"apiv1",
								"pantry",
								"{{pantry_id}}",
								"basket",
								"{{basket_name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://getpantry.cloud/apiv1/pantry/d5f936ab-4fbc-4cf2-9297-e0a9efded1f9",
					"protocol": "https",
					"host": [
						"getpantry",
						"cloud"
					],
					"path": [
						"apiv1",
						"pantry",
						"d5f936ab-4fbc-4cf2-9297-e0a9efded1f9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new basket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Check if request status is OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Check if Pantry API path variable is used in the URL\r",
							"pm.test(\"Pantry API path variable used\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_api_path\"));\r",
							"});\r",
							"\r",
							"//Check if Pantry ID variable is used in the URL\r",
							"pm.test(\"Pantry id variable used\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_id\"));\r",
							"});\r",
							"\r",
							"//Check if Basket name variable is used in the URL\r",
							"//The .search() method returns -1 by default if no match found for \"basket\" in the URL (e.g. for getting account details)\r",
							" if(String(pm.request.url).search(\"basket\") != -1){\r",
							"pm.test(\"Basket name variable used when needed\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"basket_name\"));\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://getpantry.cloud/apiv1/pantry/d5f936ab-4fbc-4cf2-9297-e0a9efded1f9/basket/kosar",
					"protocol": "https",
					"host": [
						"getpantry",
						"cloud"
					],
					"path": [
						"apiv1",
						"pantry",
						"d5f936ab-4fbc-4cf2-9297-e0a9efded1f9",
						"basket",
						"kosar"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fill basket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Check if request status is OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Check if Pantry API path variable is used in the URL\r",
							"pm.test(\"Pantry API path variable used\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_api_path\"));\r",
							"});\r",
							"\r",
							"//Check if Pantry ID variable is used in the URL\r",
							"pm.test(\"Pantry id variable used\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_id\"));\r",
							"});\r",
							"\r",
							"//Check if Basket name variable is used in the URL\r",
							"//The .search() method returns -1 by default if no match found for \"basket\" in the URL (e.g. for getting account details)\r",
							" if(String(pm.request.url).search(\"basket\") != -1){\r",
							"pm.test(\"Basket name variable used when needed\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"basket_name\"));\r",
							"    });\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fruits\": [\r\n        \"apple\",\r\n        \"banana\",\r\n        \"peach\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://getpantry.cloud/apiv1/pantry/{{pantry_id}}/basket/{{basket_name}}",
					"protocol": "https",
					"host": [
						"getpantry",
						"cloud"
					],
					"path": [
						"apiv1",
						"pantry",
						"{{pantry_id}}",
						"basket",
						"{{basket_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete basket",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Check if request status is OK\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Check if Pantry API path variable is used in the URL\r",
							"pm.test(\"Pantry API path variable used\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_api_path\"));\r",
							"});\r",
							"\r",
							"//Check if Pantry ID variable is used in the URL\r",
							"pm.test(\"Pantry id variable used\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"pantry_id\"));\r",
							"});\r",
							"\r",
							"//Check if Basket name variable is used in the URL\r",
							"//The .search() method returns -1 by default if no match found for \"basket\" in the URL (e.g. for getting account details)\r",
							" if(String(pm.request.url).search(\"basket\") != -1){\r",
							"pm.test(\"Basket name variable used when needed\", function () {\r",
							"    pm.expect(String(pm.request.url)).to.include(pm.variables.get(\"basket_name\"));\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://getpantry.cloud/apiv1/pantry/{{pantry_id}}/basket/{{basket_name}}",
					"protocol": "https",
					"host": [
						"getpantry",
						"cloud"
					],
					"path": [
						"apiv1",
						"pantry",
						"{{pantry_id}}",
						"basket",
						"{{basket_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "pantry_api_path",
			"value": "https://getpantry.cloud/apiv1/pantry/",
			"type": "string"
		},
		{
			"key": "pantry_id",
			"value": "d5f936ab-4fbc-4cf2-9297-e0a9efded1f9",
			"type": "string"
		},
		{
			"key": "basket_name",
			"value": "kosar",
			"type": "string"
		}
	]
}